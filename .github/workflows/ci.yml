name: CI

on: push

jobs:
  setup-dependencies:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the Project
        run: pnpm build

  package-tests:
    needs: setup-dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4.0.0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Start Services
        run: docker compose up -d

      - name: Wait for Services to be Healthy
        run: |
          for service in postgres qdrant redis ollama; do
            echo "Waiting for $service to be healthy..."
            until docker inspect --format='{{.State.Health.Status}}' ait_$service | grep "healthy"; do
              sleep 5
            done
            echo "$service is healthy."
          done

      - name: Run Tests
        run: pnpm test

      - name: Tear Down Services
        if: always()
        run: docker compose down
