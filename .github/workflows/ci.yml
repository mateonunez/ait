name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  setup-dependencies:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v2.6.0
        with:
          version: '7'  # Specify the PNPM version if needed

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the Project
        run: pnpm build

  package-tests:
    needs: setup-dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
        package: [connectors, infrastructure, transformers]
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: toor
          POSTGRES_DB: ait
        options: --health-cmd="pg_isready -U root" --health-interval=10s --health-timeout=5s --health-retries=5

      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
        options: --health-cmd="curl -f http://localhost:6333/health || exit 1" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v2.6.0
        with:
          version: '7'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Start Services
        run: docker-compose -f docker-compose.ci.yml up -d

      - name: Wait for PostgreSQL to be Healthy
        run: |
          docker-compose -f docker-compose.ci.yml exec -T ait_postgres_ci sh -c "until pg_isready -U root; do sleep 1; done"

      - name: Wait for Qdrant to be Healthy
        run: |
          # check status 200
          until curl -f http://localhost:6333/health; do
            echo "Waiting for Qdrant to be healthy..."
            sleep 5
          done
          echo "Qdrant is healthy."

      - name: Run Tests for ${{ matrix.package }}
        run: |
          cd packages/${{ matrix.package }}
          pnpm test

      - name: Tear Down Services
        if: always()
        run: docker-compose -f docker-compose.ci.yml down
